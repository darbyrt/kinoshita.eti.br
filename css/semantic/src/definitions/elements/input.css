@import multiple '../../theme.config';
.ui.input {
  position: relative;
  font-weight: normal;
  font-style: normal;
  display: inline-flex;
  color: ;
}
.ui.input input {
  margin: 0em;
  max-width: 100%;
  flex: 1 0 auto;
  outline: none;
  -webkit-tap-highlight-color: rgba(255,255,255,0);
  text-align: ;
  line-height: ;
  font-family: ;
  padding: ;
  background: ;
  border: ;
  color: ;
  border-radius: ;
  transition: ;
  box-shadow: ;
}
.ui.input input::-webkit-input-placeholder {
  color: ;
}
.ui.input input::-moz-placeholder {
  color: ;
}
.ui.input input::-ms-input-placeholder {
  color: ;
}
.ui.disabled.input,
.ui.input input[disabled] {
  opacity: ;
}
.ui.disabled.input input {
  pointer-events: none;
}
.ui.input input:active,
.ui.input.down input {
  border-color: ;
  background: ;
  color: ;
  box-shadow: ;
}
.ui.loading.loading.input > i.icon:before {
  position: absolute;
  content: '';
  top: 50%;
  left: 50%;
  margin: ;
  width: ;
  height: ;
  border-radius: ;
  border:  solid ;
}
.ui.loading.loading.input > i.icon:after {
  position: absolute;
  content: '';
  top: 50%;
  left: 50%;
  margin: ;
  width: ;
  height: ;
  animation: button-spin  linear;
  animation-iteration-count: infinite;
  border-radius: ;
  border-color:  transparent transparent;
  border-style: solid;
  border-width: ;
  box-shadow: 0px 0px 0px 1px transparent;
}
.ui.input.focus input,
.ui.input input:focus {
  border-color: ;
  background: ;
  color: ;
  box-shadow: ;
}
.ui.input.focus input::-webkit-input-placeholder,
.ui.input input:focus::-webkit-input-placeholder {
  color: ;
}
.ui.input.focus input::-moz-placeholder,
.ui.input input:focus::-moz-placeholder {
  color: ;
}
.ui.input.focus input::-ms-input-placeholder,
.ui.input input:focus::-ms-input-placeholder {
  color: ;
}
.ui.input.error input {
  background-color: ;
  border-color: ;
  color: ;
  box-shadow: ;
}
.ui.input.error input::-webkit-input-placeholder {
  color: ;
}
.ui.input.error input::-moz-placeholder {
  color: ;
}
.ui.input.error input::-ms-input-placeholder {
  color: ;
}
.ui.input.error input:focus::-webkit-input-placeholder {
  color: ;
}
.ui.input.error input:focus::-moz-placeholder {
  color: ;
}
.ui.input.error input:focus::-ms-input-placeholder {
  color: ;
}
.ui.transparent.input input {
  border-color: transparent !important;
  background-color: transparent !important;
  padding: 0em !important;
  box-shadow: none !important;
}
.ui.transparent.icon.input > i.icon {
  width: ;
}
.ui.transparent.icon.input > input {
  padding-left: 0em !important;
  padding-right:  !important;
}
.ui.transparent[class*="left icon"].input > input {
  padding-left:  !important;
  padding-right: 0em !important;
}
.ui.transparent.inverted.input {
  color: ;
}
.ui.transparent.inverted.input input {
  color: inherit;
}
.ui.transparent.inverted.input input::-webkit-input-placeholder {
  color: ;
}
.ui.transparent.inverted.input input::-moz-placeholder {
  color: ;
}
.ui.transparent.inverted.input input::-ms-input-placeholder {
  color: ;
}
.ui.icon.input > i.icon {
  cursor: default;
  position: absolute;
  line-height: 1;
  text-align: center;
  top: 0px;
  right: 0px;
  margin: 0em;
  height: 100%;
  width: ;
  opacity: ;
  border-radius: 0em   0em;
  transition: ;
}
.ui.icon.input > i.icon:not(.link) {
  pointer-events: none;
}
.ui.icon.input input {
  padding-right:  !important;
}
.ui.icon.input > i.icon:before,
.ui.icon.input > i.icon:after {
  left: 0;
  position: absolute;
  text-align: center;
  top: 50%;
  width: 100%;
  margin-top: ;
}
.ui.icon.input > i.link.icon {
  cursor: pointer;
}
.ui.icon.input > i.circular.icon {
  top: ;
  right: ;
}
.ui[class*="left icon"].input > i.icon {
  right: auto;
  left: ;
  border-radius:  0em 0em ;
}
.ui[class*="left icon"].input > i.circular.icon {
  right: auto;
  left: ;
}
.ui[class*="left icon"].input > input {
  padding-left:  !important;
  padding-right:  !important;
}
.ui.icon.input > input:focus ~ i.icon {
  opacity: 1;
}
.ui.labeled.input > .label {
  flex: 0 0 auto;
  margin: 0;
  font-size: ;
}
.ui.labeled.input > .label:not(.corner) {
  padding-top: ;
  padding-bottom: ;
}
.ui.labeled.input:not([class*="corner labeled"]) .label:first-child {
  border-top-right-radius: 0px;
  border-bottom-right-radius: 0px;
}
.ui.labeled.input:not([class*="corner labeled"]) .label:first-child + input {
  border-top-left-radius: 0px;
  border-bottom-left-radius: 0px;
  border-left-color: transparent;
}
.ui.labeled.input:not([class*="corner labeled"]) .label:first-child + input:focus {
  border-left-color: ;
}
.ui[class*="right labeled"].input input {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
  border-right-color: transparent !important;
}
.ui[class*="right labeled"].input input + .label {
  border-top-left-radius: 0px;
  border-bottom-left-radius: 0px;
}
.ui[class*="right labeled"].input input:focus {
  border-right-color:  !important;
}
.ui.labeled.input .corner.label {
  top: ;
  right: ;
  font-size: ;
  border-radius: 0em  0em 0em;
}
.ui[class*="corner labeled"]:not([class*="left corner labeled"]).labeled.input input {
  padding-right:  !important;
}
.ui[class*="corner labeled"].icon.input:not([class*="left corner labeled"]) > input {
  padding-right:  !important;
}
.ui[class*="corner labeled"].icon.input:not([class*="left corner labeled"]) > .icon {
  margin-right: ;
}
.ui[class*="left corner labeled"].labeled.input input {
  padding-left:  !important;
}
.ui[class*="left corner labeled"].icon.input > input {
  padding-left:  !important;
}
.ui[class*="left corner labeled"].icon.input > .icon {
  margin-left: ;
}
.ui.input > .ui.corner.label {
  top: ;
  right: ;
}
.ui.input > .ui.left.corner.label {
  right: auto;
  left: ;
}
.ui.action.input > .button,
.ui.action.input > .buttons {
  display: flex;
  align-items: center;
  flex: 0 0 auto;
}
.ui.action.input > .button,
.ui.action.input > .buttons > .button {
  padding-top: ;
  padding-bottom: ;
  margin: 0;
}
.ui.action.input:not([class*="left action"]) > input {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
  border-right-color: transparent !important;
}
.ui.action.input:not([class*="left action"]) > .dropdown,
.ui.action.input:not([class*="left action"]) > .button,
.ui.action.input:not([class*="left action"]) > .buttons > .button {
  border-radius: 0px;
}
.ui.action.input:not([class*="left action"]) > .dropdown:last-child,
.ui.action.input:not([class*="left action"]) > .button:last-child,
.ui.action.input:not([class*="left action"]) > .buttons:last-child > .button {
  border-radius: 0px   0px;
}
.ui.action.input:not([class*="left action"]) input:focus {
  border-right-color:  !important;
}
.ui[class*="left action"].input > input {
  border-top-left-radius: 0px !important;
  border-bottom-left-radius: 0px !important;
  border-left-color: transparent !important;
}
.ui[class*="left action"].input > .dropdown,
.ui[class*="left action"].input > .button,
.ui[class*="left action"].input > .buttons > .button {
  border-radius: 0px;
}
.ui[class*="left action"].input > .dropdown:first-child,
.ui[class*="left action"].input > .button:first-child,
.ui[class*="left action"].input > .buttons:first-child > .button {
  border-radius:  0px 0px ;
}
.ui[class*="left action"].input > input:focus {
  border-left-color:  !important;
}
.ui.inverted.input input {
  border: none;
}
.ui.fluid.input {
  display: flex;
}
.ui.fluid.input > input {
  width: 0px !important;
}
.ui.mini.input {
  font-size: ;
}
.ui.small.input {
  font-size: ;
}
.ui.input {
  font-size: ;
}
.ui.large.input {
  font-size: ;
}
.ui.big.input {
  font-size: ;
}
.ui.huge.input {
  font-size: ;
}
.ui.massive.input {
  font-size: ;
}
