<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
    xmlns:content="http://purl.org/rss/1.0/modules/content/"
    xmlns:wfw="http://wellformedweb.org/CommentAPI/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:atom="http://www.w3.org/2005/Atom"
    xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
    xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
>
 
<channel>
    <title>Bruno P. Kinoshita</title>
    <atom:link href="http://kinoshita.eti.br/blog/feed.xml" rel="self" type="application/rss+xml" />
    <link>http://kinoshita.eti.br/</link>
    <description></description>
    <lastBuildDate>Tue, 09 Sep 2014 13:07:16 -0300</lastBuildDate>
    <language>en-US</language>
    <generator>PieCrust 1.2.0</generator>
 
<item>
    <title>git clone fails with fatal: Unable to find remote helper for &#039;https&#039;</title>
    <pubDate>Thu, 17 Jan 2013 00:00:00 -0200</pubDate>
    <link>/2013/01/17/git-clone-fails-with-fatal-unable-to-find-remote-helper-for-https.html</link>
    <dc:creator>Bruno P. Kinoshita</dc:creator>
    <description>&lt;p&gt;I&amp;#8217;ve been working in a client site without Internet connection, and behind a troll proxy. There is an internal yum repository, but many dependencies are missing.&lt;/p&gt;

&lt;p&gt;There weren&amp;#8217;t git-all, git or git-core packages there, so I had to download and install from sources. I didn&amp;#8217;t pay attention to the &lt;code&gt;./configure&lt;/code&gt; output and proceeded with &lt;code&gt;make&lt;/code&gt; and &lt;code&gt;make install&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Git was installed and ready to rock, but in my first &lt;code&gt;git clone https://&lt;/code&gt; (SSH ports are blocked) I received: &lt;strong&gt;fatal: Unable to find remote helper for &amp;#8216;https&amp;#8217;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Turns out that I was missing libcurl-devel, though I did have curl. After installing libcurl-devel and installing from sources again all worked fine.&lt;/p&gt;
</description>
</item>
<item>
    <title>Using Apache Commons Functor functional interfaces with Java 8 lambdas</title>
    <pubDate>Fri, 21 Dec 2012 00:00:00 -0200</pubDate>
    <link>/2012/12/21/using-apache-commons-functor-functional-interfaces-with-java-8-lambdas.html</link>
    <dc:creator>Bruno P. Kinoshita</dc:creator>
    <description>&lt;p&gt;&lt;a href=&#039;http://commons.apache.org/sandbox/functor/&#039;&gt;Apache Commons Functor&lt;/a&gt; (hereon [functor]) is an &lt;a href=&#039;http://commons.apache.org/&#039;&gt;Apache Commons&lt;/a&gt; component that provides a functional programming API and several patterns implemented (visitor, generator, aggregator, etc). &lt;a href=&quot;http://openjdk.java.net/projects/lambda/&quot; title=&quot;Java 8 lambda&quot;&gt;Java 8&lt;/a&gt; has several nice new features, including lambda expressions and &lt;a href=&quot;http://datumedge.blogspot.com.br/2012/06/java-8-lambdas.html&quot;&gt;functional interfaces&lt;/a&gt;. In Java 8, lambdas or lambdas expressions are &lt;a href=&quot;http://tronicek.blogspot.com.br/2007/12/closures-closure-is-form-of-anonymous_28.html&quot;&gt;closures&lt;/a&gt; that can be evaluated and behave like anonymous methods.&lt;/p&gt;

&lt;p&gt;Functional interfaces are interfaces with only one method. These interfaces can be used in lambdas and save you a lot of time from writing anonymous classes or even implementing the interfaces. [functor] provides several functional interfaces (thanks to &lt;a href=&quot;https://issues.apache.org/jira/browse/FUNCTOR-20&quot;&gt;Matt Benson&lt;/a&gt;). It hasn&amp;#8217;t been released yet, but there are some new examples in the project site, in the &lt;a href=&quot;http://svn.apache.org/viewvc/commons/proper/functor/trunk/&quot; title=&quot;[functor] SVN trunk&quot;&gt;trunk of the SVN&lt;/a&gt;. I will use one of these examples to show how [functor] functional interfaces can be used in conjunction with Java 8 lambdas.&lt;/p&gt;

&lt;p&gt;After the example with [functor] in Java 8, I will explain how I am running Java 8 in Eclipse (it&amp;#8217;s kind of a &lt;a href=&quot;http://www.speaklikeabrazilian.com/expression/define?e=Gambiarra&quot; title=&quot;Gambiarra&quot;&gt;gambiarra&lt;/a&gt;, but works well).&lt;/p&gt;

</description>
</item>
<item>
    <title>Running BDD tests from TestLink in Jenkins</title>
    <pubDate>Wed, 07 Nov 2012 00:00:00 -0200</pubDate>
    <link>/2012/11/07/running-bdd-tests-from-testlink-in-jenkins.html</link>
    <dc:creator>Bruno P. Kinoshita</dc:creator>
    <description>&lt;p&gt;Last night and this morning I spent some time working on running &lt;a href=&quot;http://en.wikipedia.org/wiki/Behavior-driven_development&quot; title=&quot;BDD&quot;&gt;BDD&lt;/a&gt; tests that were created in &lt;a href=&quot;http://www.teamst.org&quot; title=&quot;TestLink&quot;&gt;TestLink&lt;/a&gt; in &lt;a href=&quot;http://jenkins-ci.org&quot; title=&quot;Jenkins CI&quot;&gt;Jenkins&lt;/a&gt;, using &lt;a href=&quot;https://wiki.jenkins-ci.org/display/JENKINS/TestLink+Plugin&quot; title=&quot;Jenkins TestLink Plugin&quot;&gt;testlink-plugin&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Similar integration has already been proposed in &lt;a href=&quot;http://www.sqaopen.net/blog/en/?tag=jinfeng&quot; title=&quot;JinFeng - by Olivier Renault&quot;&gt;JinFeng&lt;/a&gt;, by Olivier Renault. Basically, you write BDD stories in TestLink (a story goes into the Test Case summary), Jenkins retrieves these stories and executes them using a skeleton project.&lt;/p&gt;

&lt;p style=&#039;text-align: center&#039;&gt;&lt;a href=&quot;/2012/11/07/running-bdd-tests-from-testlink-in-jenkins/tl_bdd.png&quot;&gt;&lt;img src=&quot;/2012/11/07/running-bdd-tests-from-testlink-in-jenkins/tl_bdd.png&quot; alt=&quot;&quot; title=&quot;TestLink BDD&quot; class=&quot;aligncenter size-full wp-image-1207&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are many ways to use BDD. In some of them you write code like Java, Ruby or Perl, and in others you write a DSL. I started working with JBehave, but for this integration, I preferred to use a &lt;a href=&quot;http://en.wikipedia.org/wiki/Domain-specific_language&quot; title=&quot;DSL&quot;&gt;DSL&lt;/a&gt; - as TestLink doesn&amp;#8217;t maintain source code, only test cases -, so I switched to &lt;a href=&quot;http://www.easyb.org&quot; title=&quot;easyb&quot;&gt;easyb&lt;/a&gt;.&lt;/p&gt;

</description>
</item>
<item>
    <title>A quick view on Wordpress, Mantis and Jenkins plug-in API</title>
    <pubDate>Thu, 25 Oct 2012 00:00:00 -0200</pubDate>
    <link>/2012/10/25/a-quick-view-on-wordpress-mantis-and-jenkins-plug-in-api.html</link>
    <dc:creator>Bruno P. Kinoshita</dc:creator>
    <description>&lt;p&gt;I&amp;#8217;m preparing a &lt;em&gt;plug-in API proposal for &lt;a href=&quot;http://www.teamst.org&quot; title=&quot;TestLink&quot;&gt;TestLink&lt;/a&gt;&lt;/em&gt;, and thought that the best way to learn how to write a good plug-in API would be by looking at other application&amp;#8217;s plug-in API&amp;#8217;s.&lt;/p&gt;

&lt;p style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/2012/10/25/a-quick-view-on-wordpress-mantis-and-jenkins-plug-in-api/testlink_logo_2.jpg &quot; alt=&quot;&quot; title=&quot;TestLink&quot; width=&quot;283&quot; height=&quot;170&quot; class=&quot;aligncenter size-full wp-image-1153&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This post contains information that I gathered for creating this new API, but that may also be useful for other programmers. I used &lt;a href=&quot;#wp&quot;&gt;Wordpress&lt;/a&gt;, &lt;a href=&quot;#mantis&quot;&gt;Mantis&lt;/a&gt; and &lt;a href=&quot;#jenkins&quot;&gt;Jenkins&lt;/a&gt; in this study. Let me know if you find any mistakes or if you have any other suggestions.&lt;/p&gt;

</description>
</item>
<item>
    <title>Replacing a HashSet with a BitSet</title>
    <pubDate>Sat, 20 Oct 2012 00:00:00 -0300</pubDate>
    <link>/2012/10/20/replacing-a-hashset-with-a-bitset.html</link>
    <dc:creator>Bruno P. Kinoshita</dc:creator>
    <description>&lt;p&gt;I always read the messages in the &lt;a href=&quot;http://www.apache.org/foundation/mailinglists.html&quot; title=&quot;Apache mailing lists&quot;&gt;Apache dev mailing lists&lt;/a&gt;, including Apache Commons &lt;a href=&quot;http://commons.apache.org/mail-lists.html&quot; title=&quot;Apache Commons mailing lists&quot;&gt;dev mailing list&lt;/a&gt;. And you should too. There are always interesting discussions. Sometimes you participate, other times you only watch what&amp;#8217;s happening, but in the end &lt;strong&gt;you always learn something new&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;A few days ago, I found &lt;a href=&quot;https://issues.apache.org/jira/browse/LANG-839&quot; title=&quot;LANG-839&quot;&gt;an issue&lt;/a&gt; where it was being proposed to replace an unnecessary &lt;a href=&quot;http://docs.oracle.com/javase/6/docs/api/java/util/HashSet.html&quot; title=&quot;HashSet&quot;&gt;HashSet&lt;/a&gt; in &lt;a href=&quot;http://commons.apache.org/lang/api-release/org/apache/commons/lang3/ArrayUtils.html&quot; title=&quot;ArrayUtils&quot;&gt;ArrayUtils&lt;/a&gt;#removeElements() by a &lt;a href=&quot;http://docs.oracle.com/javase/6/docs/api/java/util/BitSet.html&quot; title=&quot;BitSet&quot;&gt;BitSet&lt;/a&gt;. Here&amp;#8217;s how the code looked like: &lt;/p&gt;

&lt;pre class=&quot;java&quot; style=&quot;font-family:monospace;&quot;&gt;HashSet&lt;span style=&quot;color: #339933;&quot;&gt;&amp;lt;&lt;/span&gt;Integer&lt;span style=&quot;color: #339933;&quot;&gt;&amp;gt;&lt;/span&gt; toRemove &lt;span style=&quot;color: #339933;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;new&lt;/span&gt; HashSet&lt;span style=&quot;color: #339933;&quot;&gt;&amp;lt;&lt;/span&gt;Integer&lt;span style=&quot;color: #339933;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;
&lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;for&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Adocs.oracle.com+javase+docs+api+map&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;Map&lt;/span&gt;&lt;/a&gt;.&lt;span style=&quot;color: #006633;&quot;&gt;Entry&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Adocs.oracle.com+javase+docs+api+character&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;Character&lt;/span&gt;&lt;/a&gt;, MutableInt&lt;span style=&quot;color: #339933;&quot;&gt;&amp;gt;&lt;/span&gt; e &lt;span style=&quot;color: #339933;&quot;&gt;:&lt;/span&gt; occurrences.&lt;span style=&quot;color: #006633;&quot;&gt;entrySet&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#123;&lt;/span&gt;
    &lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Adocs.oracle.com+javase+docs+api+character&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;Character&lt;/span&gt;&lt;/a&gt; v &lt;span style=&quot;color: #339933;&quot;&gt;=&lt;/span&gt; e.&lt;span style=&quot;color: #006633;&quot;&gt;getKey&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;
    &lt;span style=&quot;color: #000066; font-weight: bold;&quot;&gt;int&lt;/span&gt; found &lt;span style=&quot;color: #339933;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #cc66cc;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;
    &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;for&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #000066; font-weight: bold;&quot;&gt;int&lt;/span&gt; i &lt;span style=&quot;color: #339933;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #cc66cc;&quot;&gt;0&lt;/span&gt;, ct &lt;span style=&quot;color: #339933;&quot;&gt;=&lt;/span&gt; e.&lt;span style=&quot;color: #006633;&quot;&gt;getValue&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;.&lt;span style=&quot;color: #006633;&quot;&gt;intValue&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt; i &lt;span style=&quot;color: #339933;&quot;&gt;&amp;lt;&lt;/span&gt; ct&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt; i&lt;span style=&quot;color: #339933;&quot;&gt;++&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#123;&lt;/span&gt;
        found &lt;span style=&quot;color: #339933;&quot;&gt;=&lt;/span&gt; indexOf&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;array, v.&lt;span style=&quot;color: #006633;&quot;&gt;charValue&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;, found&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;
        &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;found &lt;span style=&quot;color: #339933;&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&quot;color: #cc66cc;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#123;&lt;/span&gt;
            &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;break&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;
        &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#125;&lt;/span&gt;
        toRemove.&lt;span style=&quot;color: #006633;&quot;&gt;add&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;found&lt;span style=&quot;color: #339933;&quot;&gt;++&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;
    &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#125;&lt;/span&gt;
&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#125;&lt;/span&gt;
&lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #000066; font-weight: bold;&quot;&gt;char&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#91;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#93;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt; removeAll&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Adocs.oracle.com+javase+docs+api+object&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;Object&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;array, extractIndices&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;toRemove&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/pre&gt;

&lt;p style=&quot;text-align: center&quot;&gt;&lt;a href=&quot;/2012/10/20/replacing-a-hashset-with-a-bitset/feather_small.gif&quot;&gt;&lt;img src=&quot;/2012/10/20/replacing-a-hashset-with-a-bitset/feather_small.gif&quot; alt=&quot;&quot; title=&quot;Apache Software Foundation&quot; width=&quot;203&quot; height=&quot;61&quot; class=&quot;aligncenter size-full wp-image-1125&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The HashSet created at line 1, in the code above, was used to store the array index of the elements that should be removed. And at line 13 there is a call to removeAll method, passing the indexes to be removed. And here&amp;#8217;s how the new code looks like: &lt;/p&gt;

&lt;pre class=&quot;java&quot; style=&quot;font-family:monospace;&quot;&gt;&lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Adocs.oracle.com+javase+docs+api+bitset&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;BitSet&lt;/span&gt;&lt;/a&gt; toRemove &lt;span style=&quot;color: #339933;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;new&lt;/span&gt; &lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Adocs.oracle.com+javase+docs+api+bitset&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;BitSet&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;
&lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;for&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Adocs.oracle.com+javase+docs+api+map&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;Map&lt;/span&gt;&lt;/a&gt;.&lt;span style=&quot;color: #006633;&quot;&gt;Entry&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Adocs.oracle.com+javase+docs+api+character&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;Character&lt;/span&gt;&lt;/a&gt;, MutableInt&lt;span style=&quot;color: #339933;&quot;&gt;&amp;gt;&lt;/span&gt; e &lt;span style=&quot;color: #339933;&quot;&gt;:&lt;/span&gt; occurrences.&lt;span style=&quot;color: #006633;&quot;&gt;entrySet&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#123;&lt;/span&gt;
    &lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Adocs.oracle.com+javase+docs+api+character&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;Character&lt;/span&gt;&lt;/a&gt; v &lt;span style=&quot;color: #339933;&quot;&gt;=&lt;/span&gt; e.&lt;span style=&quot;color: #006633;&quot;&gt;getKey&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;
    &lt;span style=&quot;color: #000066; font-weight: bold;&quot;&gt;int&lt;/span&gt; found &lt;span style=&quot;color: #339933;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #cc66cc;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;
    &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;for&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #000066; font-weight: bold;&quot;&gt;int&lt;/span&gt; i &lt;span style=&quot;color: #339933;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #cc66cc;&quot;&gt;0&lt;/span&gt;, ct &lt;span style=&quot;color: #339933;&quot;&gt;=&lt;/span&gt; e.&lt;span style=&quot;color: #006633;&quot;&gt;getValue&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;.&lt;span style=&quot;color: #006633;&quot;&gt;intValue&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt; i &lt;span style=&quot;color: #339933;&quot;&gt;&amp;lt;&lt;/span&gt; ct&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt; i&lt;span style=&quot;color: #339933;&quot;&gt;++&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#123;&lt;/span&gt;
        found &lt;span style=&quot;color: #339933;&quot;&gt;=&lt;/span&gt; indexOf&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;array, v.&lt;span style=&quot;color: #006633;&quot;&gt;charValue&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;, found&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;
        &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;found &lt;span style=&quot;color: #339933;&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&quot;color: #cc66cc;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#123;&lt;/span&gt;
            &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;break&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;
        &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#125;&lt;/span&gt;
        toRemove.&lt;span style=&quot;color: #006633;&quot;&gt;set&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;found&lt;span style=&quot;color: #339933;&quot;&gt;++&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;
    &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#125;&lt;/span&gt;
&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#125;&lt;/span&gt;
&lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #000066; font-weight: bold;&quot;&gt;char&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#91;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#93;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt; removeAll&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;array, toRemove&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/pre&gt;

&lt;p&gt;The first difference is at line 1. Instead of a HashSet, it is now using a BitSet. And at line 10, instead of adding a new element to the HashSet, now it &amp;#8220;sets&amp;#8221; a bit in the set (the bit at the specified position is now true). But there are important changes at line 13. The method removeAll was changed, and now the array doesn&amp;#8217;t require a cast anymore. And the it is not necessary to cast the elements from HashSet anymore, as now the bit in the index position of the set is set to true. So the extractIndices method could be removed.&lt;/p&gt;

&lt;p&gt;&lt;p&gt;The code got simpler. But that&amp;#8217;s not all. At &lt;a href=&quot;http://www.apache.org&quot; title=&quot;Apache Software Foundation&quot;&gt;Apache Software Foundation&lt;/a&gt; you can find a lot of talented developers - that&amp;#8217;s why I got so excited after joining them. Besides simplifying the code, the developer responsible for these changes (&lt;strong&gt;sebb&lt;/strong&gt;) also pointed out that the new code &lt;strong&gt;consumes less memory and is faster&lt;/strong&gt;. Ah! And he also wrote &lt;strong&gt;unit tests&lt;/strong&gt;&lt;/p&gt;
</description>
</item>
<item>
    <title>Adding coverage reports in Jenkins to GoogleTest with gcovr</title>
    <pubDate>Tue, 16 Oct 2012 00:00:00 -0300</pubDate>
    <link>/2012/10/16/adding-coverage-reports-in-jenkins-to-googletest-with-gcovr.html</link>
    <dc:creator>Bruno P. Kinoshita</dc:creator>
    <description>&lt;p&gt;After the &lt;a href=&quot;/2012/10/11/jenkins-testlink-and-gtest-in-5-minutes-or-so&quot; title=&quot;Jenkins, TestLink and GTest in 5 minutes (or so)&quot;&gt;last post&lt;/a&gt; about &lt;a href=&quot;http://code.google.com/p/googletest/&quot; title=&quot;GoogleTest&quot;&gt;GoogleTest&lt;/a&gt; and &lt;a href=&quot;http://www.teamst.org&quot; title=&quot;TestLink&quot;&gt;TestLink&lt;/a&gt; using &lt;a href=&quot;https://wiki.jenkins-ci.org/display/JENKINS/TestLink+Plugin&quot; title=&quot;Jenkins TestLink Plug-in&quot;&gt;Jenkins TestLink Plug-in&lt;/a&gt;, I received an e-mail asking about &lt;a href=&quot;http://en.wikipedia.org/wiki/Code_coverage&quot; title=&quot;Code Coverage&quot;&gt;coverage&lt;/a&gt; with GoogleTest and &lt;a href=&quot;http://www.jenkins-ci.org&quot; title=&quot;Jenkins CI&quot;&gt;Jenkins&lt;/a&gt;. I&amp;#8217;ve just updated the &lt;a href=&quot;https://github.com/kinow/gtest-tap-listener/blob/master/samples/Makefile&quot;&gt;Makefile&lt;/a&gt; in the samples directory, of the &lt;a href=&quot;https://github.com/kinow/gtest-tap-listener&quot; title=&quot;GTest TAP Listener&quot;&gt;GoogleTest TAP listener project&lt;/a&gt;, to output coverage data.&lt;/p&gt;

&lt;p&gt;Basically, you have to add the compiler flags &lt;em&gt;-fprofile-arcs -ftest-coverage&lt;/em&gt; and link the executable with -lgcov. Take a look at the project&amp;#8217;s Makefile and you&amp;#8217;ll notice how simple it is. In order to have Jenkins interpreting your coverage report, you&amp;#8217;ll have to convert it to &lt;a href=&quot;http://cobertura.sourceforge.net&quot; title=&quot;Cobertura&quot;&gt;cobertura&lt;/a&gt; XML. There is a Python utility that can be used for this: &lt;a href=&quot;https://software.sandia.gov/trac/fast/wiki/gcovr&quot; title=&quot;gcovr&quot;&gt;gcovr&lt;/a&gt;. Download it and copy it to somewhere where Jenkins can execute it (e.g.: &lt;em&gt;/usr/local/bin&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;Now, if you&amp;#8217;ve followed the instructions from the previous post, you should have a job that reports your GoogleTest tests from Jenkins to TestLink using the plug-in, and is downloading the source code from GitHub. Add an extra build step  (Shell) to execute &lt;em&gt;gcovr&lt;/em&gt;.&lt;/p&gt;

</description>
</item>
<item>
    <title>Jenkins, TestLink and GTest in 5 minutes (or so)</title>
    <pubDate>Thu, 11 Oct 2012 00:00:00 -0300</pubDate>
    <link>/2012/10/11/jenkins-testlink-and-gtest-in-5-minutes-or-so.html</link>
    <dc:creator>Bruno P. Kinoshita</dc:creator>
    <description>&lt;p&gt;This is a 5 minutes guide on creating a job for a C++ project in &lt;a href=&quot;http://www.jenkins-ci.org&quot; title=&quot;Jenkins CI&quot;&gt;Jenkins&lt;/a&gt; with &lt;a href=&quot;http://code.google.com/p/googletest&quot; title=&quot;GoogleTest&quot;&gt;GoogleTest&lt;/a&gt; and reporting the test results back to &lt;a href=&quot;http://www.teamst.org&quot; title=&quot;TestLink&quot;&gt;TestLink&lt;/a&gt;, with &lt;a href=&quot;https://wiki.jenkins-ci.org/display/JENKINS/TestLink+Plugin&quot; title=&quot;Jenkins TestLink Plug-in&quot;&gt;testlink-plugin&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;The test project with GoogleTest&lt;/h2&gt;

&lt;p&gt;For this simple guide we will use the samples that come with &lt;a href=&quot;https://github.com/kinow/gtest-tap-listener&quot; title=&quot;GTest TAP Listener&quot;&gt;GTest TAP Listener&lt;/a&gt;. You can get the code from GitHub with &lt;code&gt;git clone git://github.com/kinow/gtest-tap-listener.git&lt;/code&gt;. Take a look at &lt;em&gt;gtest-tap-listener/samples/src/&lt;/em&gt;, there you will find two C++ files: &lt;em&gt;gtest_main.cc&lt;/em&gt; and &lt;em&gt;gtest_testHelloWorld.cc&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;gtest_main.cc&lt;/em&gt; has the &lt;a href=&quot;http://code.google.com/p/googletest/wiki/Primer#Writing_the_main()_Function&quot; title=&quot;GTest main function&quot;&gt;main function&lt;/a&gt;, and executes the test suite. And &lt;em&gt;gtest_testHelloWorld.cc&lt;/em&gt; has the test cases and tests. Take note of the test case and tests names.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/2012/10/11/jenkins-testlink-and-gtest-in-5-minutes-or-so/screenshot_001.png&quot;&gt;&lt;img src=&quot;/2012/10/11/jenkins-testlink-and-gtest-in-5-minutes-or-so/screenshot_001.png&quot; alt=&quot;&quot; title=&quot;gtest_testHelloWorld.cc&quot; width=&quot;546&quot; height=&quot;482&quot; class=&quot;aligncenter size-full wp-image-1083&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

</description>
</item>
<item>
    <title>Paper: Patterns for Introducing a Superclass for Test Classes</title>
    <pubDate>Tue, 25 Sep 2012 00:00:00 -0300</pubDate>
    <link>/2012/09/25/paper-patterns-for-introducing-a-superclass-for-test-classes.html</link>
    <dc:creator>Bruno P. Kinoshita</dc:creator>
    <description>&lt;p&gt;Few days ago we had &lt;a href=&quot;http://www.dimap.ufrn.br/sugarloafplop2012/&quot; title=&quot;SugarLoafPlop 2012&quot;&gt;SugarLoafPlop 2012&lt;/a&gt; in &lt;a href=&quot;http://maps.google.com.br/maps?q=natal+-+rn&amp;hl=en&amp;sll=-23.682803,-46.595546&amp;sspn=0.653971,1.352692&amp;hnear=Natal+-+Rio+Grande+do+Norte&amp;t=m&amp;z=11&quot; title=&quot;Natal - RN&quot;&gt;Natal - RN&lt;/a&gt;. It is a conference on &lt;a href=&quot;http://en.wikipedia.org/wiki/Pattern_language&quot; title=&quot;Pattern Language&quot;&gt;pattern languages&lt;/a&gt; of programming. About six months ago I saw a tweet by &lt;a href=&quot;https://twitter.com/emguerra&quot; title=&quot;Eduardo Guerra&quot;&gt;Eduardo Guerra&lt;/a&gt; asking if anyone had some cases where certain patterns were applied. It was a big coincidence, since I was working on &lt;a href=&quot;http://commons.apache.org/sandbox/functor/&quot; title=&quot;Apache Commons Functor&quot;&gt;Apache Commons Functor&lt;/a&gt; and some &lt;a href=&quot;http://www.jenkins-ci.org&quot; title=&quot;Jenkins-CI&quot;&gt;Jenkins plugins&lt;/a&gt;, both projects with cases that could be used in his paper.&lt;/p&gt;

&lt;p style=&quot;text-align: center&quot;&gt;&lt;a href=&quot;http://www.dimap.ufrn.br/sugarloafplop2012/&quot;&gt;&lt;img src=&quot;/2012/09/25/paper-patterns-for-introducing-a-superclass-for-test-classes/sugarloaf2012_300_146.jpg&quot; alt=&quot;&quot; title=&quot;SugarLoaf Plop 2012&quot; width=&quot;300&quot; height=&quot;146&quot; class=&quot;aligncenter size-medium wp-image-1071&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So I joined Guerra and gave my small contribution to the paper that &lt;a href=&quot;http://www.dimap.ufrn.br/sugarloafplop2012/pages/acceptedpapers.html&quot; title=&quot;accepted papers&quot;&gt;has been accepted&lt;/a&gt; for this edition of SugarLoafPlop. Guerra also went there to give a talk and participate in an open discussion about several papers, including ours.&lt;/p&gt;

&lt;p&gt;I simply love when these things happen, it was great work with Guerra, and even better for being able to use Open Source examples in our paper.&lt;/p&gt;
</description>
</item>
<item>
    <title>Bioinformatics tools: Stacks</title>
    <pubDate>Tue, 25 Sep 2012 00:00:00 -0300</pubDate>
    <link>/2012/09/25/bioinformatic-tools-series-stacks.html</link>
    <dc:creator>Bruno P. Kinoshita</dc:creator>
    <description>&lt;p&gt;&lt;em&gt;It is the first post about &lt;strong&gt;bioinformatics tools&lt;/strong&gt;, but I will try to post more about other tools such as MrBayes, Structure, maybe some next generation sequencing tools too, and Bioperl, Biojava, and so on.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;As I am more a computer geek, rather than a bioinformatics one, I will focus on requirements for running these tools on clusters and the requirements to install them on your machine. The instructions require that you have an intermediary knowledge on *nix OS and sometimes a bit of programming experience.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I will be using tutorials available on the Internet and hosting my code in &lt;a href=&quot;http://www.github.com/kinow&quot; alt=&quot;GitHub kinow&quot; title=&quot;GitHub kinow&quot;&gt;GitHub/kinow&lt;/a&gt;. Hammer time!&lt;/em&gt;&lt;/p&gt;

</description>
</item>
<item>
    <title>Running word-count example on a Hadoop commodity-hardware cluster and on a Hadoop local installation</title>
    <pubDate>Thu, 20 Sep 2012 00:00:00 -0300</pubDate>
    <link>/2012/09/20/running-word-count-example-on-a-hadoop-commodity-hardware-cluster-and-on-a-hadoop-local-installation.html</link>
    <dc:creator>Bruno P. Kinoshita</dc:creator>
    <description>&lt;p&gt;Last weekend I spent some hours assembling old computer parts to create my commodity hardware cluster for running Hadoop. I already had a local installation in my notebook, so I thought it would be cool to run the word-count example in both scenarios to see what would be the results.&lt;/p&gt;

&lt;p&gt;But first, let&amp;#8217;s review the hardware configurations:&lt;/p&gt;

</description>
</item>
</channel>
</rss>