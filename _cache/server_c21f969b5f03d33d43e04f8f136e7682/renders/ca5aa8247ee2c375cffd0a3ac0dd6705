{"segments": {"content": "<p>Some weeks ago I started learning <a href=\"http://saltstack.com/\">SaltStack</a> for a project at work. But I couldn&#8217;t\nfind a good Docker image for that and I had to ask the Ops team for some VM&#8217;s. We\nare having a rainy weekend in Auckland, so I decided to have another look at the\n<a href=\"https://wiki.jenkins-ci.org/display/JENKINS/saltstack-plugin\">Jenkins SaltStack Plug-in</a>.</p>\n<p>But now since I was at home, I couldn&#8217;t use the VM&#8217;s that I had access to at\nwork. So decided to look again at Docker or Vagrant images. After playing\nwith a few images, I found <a href=\"https://hub.docker.com/r/bbinet/salt-master/\">bbinet/salt-master</a>.\nIt not only sets up a master, but also provides an easy way to enable the cherrypy\nAPI (necessary for the Jenkins plug-in).</p>\n<p>This post describes the steps that I took to have a running Salt Master with the API\nenabled. First you need to create some directories and files to use with the image.</p>\n<div class=\"highlight\"><pre>shell<span class=\"nv\">$ </span>mkdir ~/master <span class=\"o\">&amp;&amp;</span> <span class=\"nb\">cd</span> ~/master\nshell<span class=\"nv\">$ </span>mkdir -p config/master.d/\nshell<span class=\"nv\">$ </span>vim config/master.d/api.conf\n</pre></div>\n\n<p>The api.conf contains the SaltStack API configuration. You can change port, user\nand other settings if necessary. Just remember to add a credential in Jenkins\nfor the plug-in.</p>\n<div class=\"highlight\"><pre><span class=\"c\"># File: api.conf</span>\nexternal_auth:\n  pam:\n    saltapiuser:\n      - .*\n      - <span class=\"s1\">&#39;@runner&#39;</span>\n      - <span class=\"s1\">&#39;@wheel&#39;</span>\n      - <span class=\"s1\">&#39;@jobs&#39;</span>\nrest_cherrypy:\n  port: 8000\n  host: 0.0.0.0\n  disable_ssl: True\n  static: /opt/molten\n  static_path: /assets\n  app: /opt/molten/index.html\n  app_path: /molten\n</pre></div>\n\n<p>The image also conveniently provides a script that is executed before the\nentry point (if provided). So we can also create a user for the API automatically\nwhen the image is created.</p>\n<div class=\"highlight\"><pre>shell<span class=\"nv\">$ </span>vim config/before-exec.sh\n</pre></div>\n\n<div class=\"highlight\"><pre><span class=\"c\">#!/bin/bash</span>\n<span class=\"c\"># File: before-exec.sh</span>\nuseradd saltapiuser\n<span class=\"nb\">echo</span> -e <span class=\"s2\">&quot;nosecret\\nnosecret\\n&quot;</span> <span class=\"p\">|</span> passwd saltapiuser\n<span class=\"nb\">exit </span>0\n</pre></div>\n\n<p>Also make the script executable.</p>\n<div class=\"highlight\"><pre>chmod +x config/before-exec.sh\n</pre></div>\n\n<p>And finally start the container.</p>\n<div class=\"highlight\"><pre>docker run --name salt-master -v <span class=\"nv\">$PWD</span>/config:/config <span class=\"se\">\\</span>\n    -p 4505:4505 -p 4506:4506 -p 443:443 -p 8000:8000 <span class=\"se\">\\</span>\n    bbinet/salt-master\n</pre></div>\n\n<p>Once the container is running, you can go to http://localhost:8000 and\nlog in as saltapiuser:nosecret, and also configure your plug-in\nin Jenkins.</p>\n<p>Happy hacking!</p>"}, "pass_info": {"pagination_has_more": false, "used_taxonomy_terms": [], "used_source_names": [], "used_pagination": false, "used_assets": false}}