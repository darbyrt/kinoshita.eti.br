{"pass_info": {"used_pagination": false, "pagination_has_more": false, "used_assets": true, "used_source_names": [], "used_taxonomy_terms": []}, "segments": {"content": "<p>Having worked in Open Source for a few years, one of my favorite things is when you can\nshare experience with other people that you meet. <a href=\"https://github.com/agray\">Andrew Gray</a>\nhas worked with .NET and Jenkins for years, and we met through some Open Source. He also\nwrites the blog <a href=\"http://jenkinsheaven.blogspot.co.nz/\">Jenkins.NET</a>.</p>\n<p>A couple of days ago he had an interesting question about using Active Choices Plug-in\nin Jenkins. He wanted to see if that would be possible to use the plug-in to show different\nparameters depending on the user permission.</p>\n<p>Another important point is that it needed to support the\n<a href=\"https://wiki.jenkins-ci.org/display/JENKINS/Role+Strategy+Plugin\">Role Strategy Plug-in</a>. This plug-in\nlets you define roles, define which permissions a role has, and then assign users to the roles.</p>\n<h2>To the code</h2>\n<div class=\"highlight\"><pre><span class=\"kn\">import</span> <span class=\"nn\">hudson.model.User</span>\n<span class=\"kn\">import</span> <span class=\"nn\">hudson.model.Hudson</span>\n<span class=\"kn\">import</span> <span class=\"nn\">hudson.security.AuthorizationStrategy</span>\n<span class=\"kn\">import</span> <span class=\"nn\">hudson.security.Permission</span>\n<span class=\"kn\">import</span> <span class=\"nn\">com.michelin.cio.hudson.plugins.rolestrategy.RoleBasedAuthorizationStrategy</span>\n<span class=\"kn\">import</span> <span class=\"nn\">com.michelin.cio.hudson.plugins.rolestrategy.RoleMap</span>\n\n<span class=\"n\">AuthorizationStrategy</span> <span class=\"n\">strategy</span> <span class=\"o\">=</span> <span class=\"n\">Hudson</span><span class=\"o\">.</span><span class=\"na\">getInstance</span><span class=\"o\">().</span><span class=\"na\">getAuthorizationStrategy</span><span class=\"o\">();</span>\n\n<span class=\"n\">jobs</span> <span class=\"o\">=</span> <span class=\"o\">[]</span>\n<span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">User</span><span class=\"o\">.</span><span class=\"na\">current</span><span class=\"o\">()</span>\n<span class=\"n\">userId</span> <span class=\"o\">=</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"na\">getId</span><span class=\"o\">()</span>\n\n<span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">strategy</span> <span class=\"o\">!=</span> <span class=\"kc\">null</span> \n    <span class=\"c1\">// not very straightforward to get the groups for a given user</span>\n    <span class=\"n\">roles</span> <span class=\"o\">=</span> <span class=\"n\">roleStrategy</span><span class=\"o\">.</span><span class=\"na\">getGrantedRoles</span><span class=\"o\">(</span><span class=\"s2\">&quot;globalRoles&quot;</span><span class=\"o\">)</span>\n    <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"n\">entry</span> <span class=\"k\">in</span> <span class=\"n\">roles</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">role</span> <span class=\"o\">=</span> <span class=\"n\">entry</span><span class=\"o\">.</span><span class=\"na\">key</span>\n        <span class=\"n\">users</span> <span class=\"o\">=</span> <span class=\"n\">entry</span><span class=\"o\">.</span><span class=\"na\">value</span>\n        <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">role</span><span class=\"o\">.</span><span class=\"na\">getName</span><span class=\"o\">().</span><span class=\"na\">equals</span><span class=\"o\">(</span><span class=\"s2\">&quot;tester&quot;</span><span class=\"o\">))</span> <span class=\"o\">{</span>\n            <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">userId</span> <span class=\"k\">in</span> <span class=\"n\">users</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"n\">jobs</span> <span class=\"o\">=</span> <span class=\"o\">[</span><span class=\"s2\">&quot;PROJECT_FOR_TESTERS1&quot;</span><span class=\"o\">,</span> <span class=\"s2\">&quot;PROJECT_FOR_TESTERS2&quot;</span><span class=\"o\">]</span>\n                <span class=\"k\">break</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">role</span><span class=\"o\">.</span><span class=\"na\">getName</span><span class=\"o\">().</span><span class=\"na\">equals</span><span class=\"o\">(</span><span class=\"s2\">&quot;admin&quot;</span><span class=\"o\">))</span> <span class=\"o\">{</span>\n            <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">userId</span> <span class=\"k\">in</span> <span class=\"n\">users</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"n\">jobs</span> <span class=\"o\">=</span> <span class=\"o\">[</span><span class=\"s2\">&quot;PROJECT_FOR_ADMINS1&quot;</span><span class=\"o\">,</span> <span class=\"s2\">&quot;PROJECT_FOR_ADMINS2&quot;</span><span class=\"o\">]</span>\n                <span class=\"k\">break</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">return</span> <span class=\"n\">jobs</span>\n<span class=\"c1\">// TODO: handle anonymous user ;-)</span>\n</pre></div>\n\n<p>Let&#8217;s dissect the code.</p>\n<div class=\"highlight\"><pre><span class=\"kn\">import</span> <span class=\"nn\">hudson.model.User</span>\n<span class=\"kn\">import</span> <span class=\"nn\">hudson.model.Hudson</span>\n<span class=\"kn\">import</span> <span class=\"nn\">hudson.security.AuthorizationStrategy</span>\n<span class=\"kn\">import</span> <span class=\"nn\">hudson.security.Permission</span>\n<span class=\"kn\">import</span> <span class=\"nn\">com.michelin.cio.hudson.plugins.rolestrategy.RoleBasedAuthorizationStrategy</span>\n<span class=\"kn\">import</span> <span class=\"nn\">com.michelin.cio.hudson.plugins.rolestrategy.RoleMap</span>\n</pre></div>\n\n<p>You start by importing the classes that you need. If you are going to run the code against classes\nthat may exist only on slaves, you may have to write some more logic to import classes accordingly.</p>\n<div class=\"highlight\"><pre><span class=\"n\">AuthorizationStrategy</span> <span class=\"n\">strategy</span> <span class=\"o\">=</span> <span class=\"n\">Hudson</span><span class=\"o\">.</span><span class=\"na\">getInstance</span><span class=\"o\">().</span><span class=\"na\">getAuthorizationStrategy</span><span class=\"o\">();</span>\n\n<span class=\"n\">jobs</span> <span class=\"o\">=</span> <span class=\"o\">[]</span>\n<span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">User</span><span class=\"o\">.</span><span class=\"na\">current</span><span class=\"o\">()</span>\n<span class=\"n\">userId</span> <span class=\"o\">=</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"na\">getId</span><span class=\"o\">()</span>\n</pre></div>\n\n<p>The first line gets the current <a href=\"https://github.com/jenkinsci/jenkins/blob/f6e431b80c4d162560419fa51633224a9724bb0d/core/src/main/java/hudson/security/AuthorizationStrategy.java\">AuthorizationStrategy</a>\nused in Jenkins.</p>\n<p>Then we create an empty array of jobs, which is the value returned by default. And get the current\nlogged in user ID.</p>\n<div class=\"highlight\"><pre><span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">strategy</span> <span class=\"o\">!=</span> <span class=\"kc\">null</span> \n    <span class=\"c1\">// not very straightforward to get the groups for a given user</span>\n    <span class=\"n\">roles</span> <span class=\"o\">=</span> <span class=\"n\">roleStrategy</span><span class=\"o\">.</span><span class=\"na\">getGrantedRoles</span><span class=\"o\">(</span><span class=\"s2\">&quot;globalRoles&quot;</span><span class=\"o\">)</span>\n    <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"n\">entry</span> <span class=\"k\">in</span> <span class=\"n\">roles</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">role</span> <span class=\"o\">=</span> <span class=\"n\">entry</span><span class=\"o\">.</span><span class=\"na\">key</span>\n        <span class=\"n\">users</span> <span class=\"o\">=</span> <span class=\"n\">entry</span><span class=\"o\">.</span><span class=\"na\">value</span>\n        <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">role</span><span class=\"o\">.</span><span class=\"na\">getName</span><span class=\"o\">().</span><span class=\"na\">equals</span><span class=\"o\">(</span><span class=\"s2\">&quot;tester&quot;</span><span class=\"o\">))</span> <span class=\"o\">{</span>\n            <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">userId</span> <span class=\"k\">in</span> <span class=\"n\">users</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"n\">jobs</span> <span class=\"o\">=</span> <span class=\"o\">[</span><span class=\"s2\">&quot;PROJECT_FOR_TESTERS1&quot;</span><span class=\"o\">,</span> <span class=\"s2\">&quot;PROJECT_FOR_TESTERS2&quot;</span><span class=\"o\">]</span>\n                <span class=\"k\">break</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">role</span><span class=\"o\">.</span><span class=\"na\">getName</span><span class=\"o\">().</span><span class=\"na\">equals</span><span class=\"o\">(</span><span class=\"s2\">&quot;admin&quot;</span><span class=\"o\">))</span> <span class=\"o\">{</span>\n            <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">userId</span> <span class=\"k\">in</span> <span class=\"n\">users</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"n\">jobs</span> <span class=\"o\">=</span> <span class=\"o\">[</span><span class=\"s2\">&quot;PROJECT_FOR_ADMINS1&quot;</span><span class=\"o\">,</span> <span class=\"s2\">&quot;PROJECT_FOR_ADMINS2&quot;</span><span class=\"o\">]</span>\n                <span class=\"k\">break</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">return</span> <span class=\"n\">jobs</span>\n<span class=\"c1\">// TODO: handle anonymous user ;-)</span>\n</pre></div>\n\n<p>The final part simply iterates through each existing role, and then through the\nusers in that role. I could not find a more ellegant way of doing that, but in case\nyou would like to maybe optimize the code, here are the main classes that I\nused from Jenkins to write the script.</p>\n<ul>\n<li><a href=\"https://github.com/jenkinsci/role-strategy-plugin/blob/b6dca7904ce1c83b3afef0995ef5f42823171b0b/src/main/java/com/michelin/cio/hudson/plugins/rolestrategy/RoleBasedAuthorizationStrategy.java\">RoleBasedAuthorizationStrategy.java</a></li>\n<li><a href=\"https://github.com/jenkinsci/role-strategy-plugin/blob/master/src/main/java/com/michelin/cio/hudson/plugins/rolestrategy/Role.java\">Role.java</a></li>\n<li><a href=\"https://github.com/jenkinsci/role-strategy-plugin/blob/b6dca7904ce1c83b3afef0995ef5f42823171b0b/src/main/java/com/michelin/cio/hudson/plugins/rolestrategy/RoleMap.java\">RoleMap</a></li>\n<li><a href=\"https://github.com/jenkinsci/jenkins/blob/f6e431b80c4d162560419fa51633224a9724bb0d/core/src/main/java/hudson/model/User.java\">User.java</a></li>\n</ul>\n<h2>What the code does</h2>\n<p>In this section we have just simple screenshots, showing the script in the job configuration.</p>\n<div class='row'>\n<div class=\"ui container\" style='text-align: center;'>\n<figure>\n<a href=\"/_asset/posts/2016-04-24_using-active-choices-with-role-strategy-plugin-assets/screenshot01.png\" rel=\"prettyPhoto\" class=\"thumbnail\" title=\"Screen shot 01\">\n<img class=\"ui fluid image\" src=\"/_asset/posts/2016-04-24_using-active-choices-with-role-strategy-plugin-assets/screenshot01.png\" alt=\"Screen shot 01\" />\n</a>\n<figcaption>Screen shot 01</figcaption>\n</figure>\n</div>\n</div>\n\n<p>And the resulting screen. The parameter <strong>DeployApp</strong> will be available during the build,\nand can be used to trigger other jobs or pipelines.</p>\n<div class='row'>\n<div class=\"ui container\" style='text-align: center;'>\n<figure>\n<a href=\"/_asset/posts/2016-04-24_using-active-choices-with-role-strategy-plugin-assets/screenshot02.png\" rel=\"prettyPhoto\" class=\"thumbnail\" title=\"Screen shot 02\">\n<img class=\"ui fluid image\" src=\"/_asset/posts/2016-04-24_using-active-choices-with-role-strategy-plugin-assets/screenshot02.png\" alt=\"Screen shot 02\" />\n</a>\n<figcaption>Screen shot 02</figcaption>\n</figure>\n</div>\n</div>\n\n<h2>Where can you find this script?</h2>\n<p>This blog has a copy of the script, but in case you forget the address, I have submitted\na pull request to a <a href=\"https://github.com/imoutsatsos/jenkins-scriptlets\">repository</a>\nmaintained by another friend, <a href=\"https://github.com/imoutsatsos\">Ioannis Moutsatsos</a>. Ioannis\nmaintains a Jenkins installation in Novartis, and is probably the most skillful user\nof the Active Choices Plug-in.</p>\n<p>Another advantage of this other copy, is that it may be updated with time, in case there are\nbugs or improvements. So watch Ioannis&#8217; repository for updates!</p>\n<p>Happy hacking!</p>"}}