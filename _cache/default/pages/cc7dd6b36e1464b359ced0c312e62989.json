{"config": {"title": "Geek Vacation 2016", "author": "kinow", "tags": ["geek"], "category": "blog", "time": "22:17:03", "format": null, "content_type": "html", "segments": ["content"]}, "content": {"content": [{"l": 8, "c": "I just had a two week vacation, and I tried to use my time to rest, play some music, and\ncomplete a geek todo-list. \n\nThe list included things that I used some time ago but wanted to\nrefresh my memory, things that I already used but never spent time reading the manuals, and\nother things that I saw somewhere but never actually used in any project.\n\nHere the complete list, with the items that were completed highlighted. Some links with\npointers to what I used to study.\n\n* gdb, strace, ptrace, etc, sysdig, dtrace (looked for links at [HackerNews](https://news.ycombinator.com/) and [reddit](https://www.reddit.com/)) \u2714\n* geodesy ([Wikipedia](https://en.wikipedia.org/wiki/Geodesy), some PDF's) \u2714\n* QGIS ([Boston GIS docs](http://www.bostongis.com/?content_name=qgis) and [YouTube](http://youtube.com) videos) \u2714\n* SRS & CRS ([Wikipedia](https://en.wikipedia.org/wiki/Spatial_reference_system)) \u2714\n* BioPython ([project page](http://biopython.org/)) \u2714\n* BioConda ([project page](https://bioconda.github.io/)) \u2714\n* Weaver & asm ([project page](https://commons.apache.org/proper/commons-weaver/) and [Wikipedia](https://en.wikipedia.org/wiki/ObjectWeb_ASM)) \u2714\n* afl (project page, and some [tests with MapServer](http://kinoshita.eti.br/2016/02/27/learning-afl-and-testing-mapserver.html)) \u2714\n* WFS ([Wikipedia](https://en.wikipedia.org/wiki/Web_Feature_Service), [GeoServer](http://docs.geoserver.org/latest/en/user/services/wfs/reference.html) and [MapServer](http://mapserver.org/ogc/wfs_server.html)) \u2714\n* SaltStack ([project page](http://saltstack.com/), [Jenkins Plug-ins for SaltStack](https://wiki.jenkins-ci.org/display/JENKINS/saltstack-plugin), and a few tests with VM's and Docker) \u2714\n* InfluxDB ([project page](https://influxdata.com/)) \u2714\n* rr ([project page](http://rr-project.org/) and some local tests) \u2714\n* ZeroMQ ([project page](http://zeromq.org/), [SaltStack source code](https://github.com/saltstack/salt/blob/90b0a42a21dc11ca118ffbb679e0871f234c17bc/salt/transport/zeromq.py)) \u2714\n* netty ([project page](http://netty.io/)) \u2714\n* RethinkDB ([project page](https://rethinkdb.com/), and a [test project](https://github.com/kinow/jira-rethinkdb)) \u2714\n* C++ (templates, abstractions in C++, etc) ([just this article to remember syntax](http://www.codeproject.com/Articles/257589/An-Idiots-Guide-to-Cplusplus-Templates-Part)) \u2714\n* Linear programming ([PuLP docs](http://benalexkeen.com/linear-programming-with-python-and-pulp/)) \u2714\n* AKKA ([project page](http://akka.io/)) \u2714\n* Frege ([project page](https://github.com/Frege/frege) (reading their [new book](https://www.gitbook.com/book/dierk/fregegoodness/details)))\n* JVM internals (played a little with [asm](http://asm.ow2.org/), [javap](http://docs.oracle.com/javase/7/docs/technotes/tools/windows/javap.html))\n* Java Concurrency (started re-reading [Java Concurrency in Practice](http://jcip.net/), but still in the initial chapters)\n* PostGIS ([project page](postgis.net/))\n* Krita ([project page](https://krita.org/) and [David Revoy's tutorials](http://www.davidrevoy.com/article193/guide-building-krita-on-linux-for-cats))\n* Scala ([project page](http://www.scala-lang.org/))\n* Minecraft Forge ([project forum](http://www.minecraftforge.net/forum/))\n* Graphs in Jenkins, cylc, Spark, Jena and clue/graph (didn't have time for this one)\n\nGoing to have less spare time now for Open Source and learning the rest of the stuff on this list,\nbut there's always some books to read, and things to learn anyway right \u00af\\\\_(\u30c4)_/\u00af\n", "o": 102, "f": null}]}}