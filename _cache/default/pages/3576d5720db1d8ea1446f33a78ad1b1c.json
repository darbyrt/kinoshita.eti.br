{"config": {"title": "Maven site tips: Maven Fluido Skin and Javadoc class diagrams", "id": 934, "author": "kinow", "tags": ["java"], "time": "21:01:52", "format": null, "content_type": "html", "segments": ["content"]}, "content": {"content": [{"l": 8, "c": "<p>I have been using Maven sites for a while, and am very happy with it. I didn't like to have to update my projects after Maven 3, but that was all right, Maven 3 brought many new cool things. However, there were two things that annoyed me: lack of a nice and modern skin, and browsing Javadoc of complex code. The thought of creating a custom Maven skin even crossed my mind, but I never had time to read about it.</p>\n\n<p>But the world is full of good and talented people! Like the guys from <a title=\"99soft\" href=\"http://www.99soft.org/\">99soft</a>. They created <a title=\"Maven Fluido Skin\" href=\"http://maven.apache.org/skins/maven-fluido-skin/\">Maven Fluido Skin</a>, and donated it to <a title=\"Apache Software Foundation\" href=\"http://apache.org/\">Apache Software Foundation</a>. It's built on top of <a title=\"Twitter Bootstrap\" href=\"http://twitter.github.com/bootstrap/\">Twitter's Bootstrap</a>\u00a0and\u00a0available from Maven central repository. In order to use it in your Maven project, all that you have to do is add the following settings into your src/site/site.xml:</p>\n\n{% geshi 'xml' %}\n<skin>\n    <groupId>org.apache.maven.skins</groupId>\n    <artifactId>maven-fluido-skin</artifactId>\n    <version>1.2.1</version>\n</skin>{%endgeshi%}\n\n<p>Here's a list of some projects using Maven Fluido Skin (hopefully, in the near future <a title=\"Apache Commons\" href=\"http://commons.apache.org/\">Apache Commons</a> and other projects will adopt this skin as default too :-)):</p>\n\n<!--more-->\n\n<p><ul>\n\t<li><a title=\"Maven Fluido Skin\" href=\"http://maven.apache.org/skins/maven-fluido-skin/\">Maven Fluido Skin</a></li>\n\t<li><a title=\"tap4j\" href=\"http://www.tap4j.org\">tap4j</a></li>\n\t<li><a title=\"TestLink Java API\" href=\"http://testlinkjavaapi.sf.net\">TestLink Java API</a></li>\n</ul></p>\n\n<p style=\"text-align: center\"><a href=\"{{ assets.fluido_skin }}\"><img class=\"size-medium wp-image-937 aligncenter\" title=\"Maven Fluido Skin\" src=\"{{ assets.fluido_skin_300_135 }}\" alt=\"Maven Fluido Skin\" width=\"300\" height=\"135\" /></a></p>\n\n<p>Regarding the Javadoc browsing, there's a nice trick too: add class diagrams. I have seen a new Javadoc template in Apache Commons mailing list, but it was a work in progress, so for now I will stick with class diagrams. These diagrams are generated when you execute the javadoc or the site goals, using <a title=\"Graphviz\" href=\"http://www.graphviz.org/\">graphviz</a>. And there is more. You can click on the diagram classes, as they have a link to the Java class that they reference to.</p>\n\n<p>You can find instructions for setting up the diagram generation in <a href=\"http://maven.apache.org/maven-1.x/plugins/javadoc/faq.html#classdiagrams\">Apache Maven web site</a>, or looking at <a href=\"https://github.com/kinow/tap4j/blob/master/pom.xml\">examples</a> (I prefer the latter). But basically, you will need graphviz installed, and something like the following XML snippet in your project pom.xml.</p>\n\n{% geshi 'xml' %}<plugin>\n    <groupId>org.apache.maven.plugins</groupId>\n    <artifactId>maven-javadoc-plugin</artifactId>\n    <version>2.7</version>\n    <configuration>\n        <doclet>gr.spinellis.umlgraph.doclet.UmlGraphDoc</doclet>\n        <docletArtifact>\n            <groupId>gr.spinellis</groupId>\n            <artifactId>UmlGraph</artifactId>\n            <version>4.4</version>\n        </docletArtifact>\n        <additionalparam>\n            -inferrel -inferdep -quiet -hide java.*\n            -collpackages java.util.* -qualify\n            -postfixpackage -nodefontsize 9\n            -nodefontpackagesize 7\n            -edgefontname \"Trebuchet MS\"\n            -nodefontabstractname \"Trebuchet MS\"\n            -nodefontclassabstractname\n            \"Trebuchet MS\"\n            -nodefontclassname \"Trebuchet MS\"\n            -nodefontname\n            \"Trebuchet MS\"\n            -nodefontpackagename \"Trebuchet MS\"\n            -nodefonttagname\n            \"Trebuchet MS\" \n        </additionalparam>\n    </configuration>\n</plugin>{% endgeshi %}\n\n<p>Here's how a diagram looks like (source: <a href=\"http://tap4j.org/apidocs/index.html\">http://tap4j.org/apidocs/index.html</a>):</p>\n\n<p style=\"text-align: center\"><a href=\"{{ assets.javadoc_graphviz }}\"><img class=\"size-medium wp-image-938 aligncenter\" title=\"Javadoc class diagram\" src=\"{{ assets.javadoc_graphviz_300_135 }}\" alt=\"Javadoc class diagram\" width=\"300\" height=\"135\" /></a></p>\n\n<p>Have fun! :-) and remember to check if your CI machine has graphviz installed too, otherwise you will have 404 in your Javadoc pages ;-)</p>\n\n<p>Cheers</p>", "o": 136, "f": null}]}}