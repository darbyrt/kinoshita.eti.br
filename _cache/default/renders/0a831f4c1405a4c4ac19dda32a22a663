{"segments": {"content.abstract": "<p>Last year I became an <a href=\"http://www.apache.org\" title=\"Apache\">Apache</a> committer, and dedicated most of my time learning the <a href=\"http://incubator.apache.org/learn/theapacheway.html\" title=\"The Apache Way\">Apache way</a>, reading different mailing lists and getting used to the things a committer is supposed to know (voting process, keeping everything in the mailing list, and so it goes) and getting used to <a href=\"http://commons.apache.org/functor\" title=\"Apache Commons Functor\">[functor]</a> API.</p>\n\n<p>In 2013 I hope I can help in the release of [functor], since Java and <a href=\"http://reddit.com/r/functionalprogramming\">functional programming</a> are getting a lot more of attention recently, probably due to the <a href=\"http://openjdk.java.net/projects/lambda/\" title=\"Project Lambda\">project lambda</a>. But I also want to start contributing with the other components from commons (like <a href=\"http://commons.apache.org/math/\" title=\"Apache Commons Math\">math</a>, <a href=\"http://commons.apache.org/io/\" title=\"Apache Commons IO\">io</a>, <a href=\"http://commons.apache.org/jcs/\" title=\"Apache Commons JCS\">jcs</a>) and other top level projects (<a href=\"http://hadoop.apache.org/\" title=\"Apache Hadoop\">hadoop</a>, <a href=\"http://nutch.apache.org/\" title=\"Apache Nutch\">nutch</a>, <a href=\"http://lucene.apache.org/\" title=\"Apache Lucene\">lucene</a>).</p>\n\n<h4>Reviewing SVN commits log</h4>\n\n<p><a href=\"https://issues.apache.org/jira/browse/FUNCTOR-14\" title=\"Apache Commons Functor - Issue 14\">FUNCTOR-14</a> was created to enhance the <a href=\"http://commons.apache.org/functor/apidocs/org/apache/commons/functor/generator/package-summary.html\">generators API</a> in [functor]. I&#8217;d worked on <a href=\"http://svn.apache.org/viewvc/commons/proper/functor/branches/generators-FUNCTOR-14/\">a branch</a> for this issue, but needed some review in order to be able to merge it with the trunk. That&#8217;s where you can see why Open Source is so awesome. Another Apache member, Matt Benson, created <a href=\"http://svn.apache.org/viewvc/commons/proper/functor/branches/FUNCTOR-14-mm/\">another branch</a> to work on the project structure, but also to review the generator API.</p>\n\n<p style='text-align: center'><a href=\"/2013/02/10/learning-with-open-source-reviewing-svn-commits-log/feather_small.gif\"><img src=\"/2013/02/10/learning-with-open-source-reviewing-svn-commits-log/feather_small.gif\" alt=\"Apache Software Foundation\" width=\"203\" height=\"61\" class=\"alignnone size-full wp-image-1125\" /></a></p>\n\n", "content": "<p>Last year I became an <a href=\"http://www.apache.org\" title=\"Apache\">Apache</a> committer, and dedicated most of my time learning the <a href=\"http://incubator.apache.org/learn/theapacheway.html\" title=\"The Apache Way\">Apache way</a>, reading different mailing lists and getting used to the things a committer is supposed to know (voting process, keeping everything in the mailing list, and so it goes) and getting used to <a href=\"http://commons.apache.org/functor\" title=\"Apache Commons Functor\">[functor]</a> API.</p>\n\n<p>In 2013 I hope I can help in the release of [functor], since Java and <a href=\"http://reddit.com/r/functionalprogramming\">functional programming</a> are getting a lot more of attention recently, probably due to the <a href=\"http://openjdk.java.net/projects/lambda/\" title=\"Project Lambda\">project lambda</a>. But I also want to start contributing with the other components from commons (like <a href=\"http://commons.apache.org/math/\" title=\"Apache Commons Math\">math</a>, <a href=\"http://commons.apache.org/io/\" title=\"Apache Commons IO\">io</a>, <a href=\"http://commons.apache.org/jcs/\" title=\"Apache Commons JCS\">jcs</a>) and other top level projects (<a href=\"http://hadoop.apache.org/\" title=\"Apache Hadoop\">hadoop</a>, <a href=\"http://nutch.apache.org/\" title=\"Apache Nutch\">nutch</a>, <a href=\"http://lucene.apache.org/\" title=\"Apache Lucene\">lucene</a>).</p>\n\n<h4>Reviewing SVN commits log</h4>\n\n<p><a href=\"https://issues.apache.org/jira/browse/FUNCTOR-14\" title=\"Apache Commons Functor - Issue 14\">FUNCTOR-14</a> was created to enhance the <a href=\"http://commons.apache.org/functor/apidocs/org/apache/commons/functor/generator/package-summary.html\">generators API</a> in [functor]. I&#8217;d worked on <a href=\"http://svn.apache.org/viewvc/commons/proper/functor/branches/generators-FUNCTOR-14/\">a branch</a> for this issue, but needed some review in order to be able to merge it with the trunk. That&#8217;s where you can see why Open Source is so awesome. Another Apache member, Matt Benson, created <a href=\"http://svn.apache.org/viewvc/commons/proper/functor/branches/FUNCTOR-14-mm/\">another branch</a> to work on the project structure, but also to review the generator API.</p>\n\n<p style='text-align: center'><a href=\"/2013/02/10/learning-with-open-source-reviewing-svn-commits-log/feather_small.gif\"><img src=\"/2013/02/10/learning-with-open-source-reviewing-svn-commits-log/feather_small.gif\" alt=\"Apache Software Foundation\" width=\"203\" height=\"61\" class=\"alignnone size-full wp-image-1125\" /></a></p>\n\n<!-- more -->\n\n<p>Matt merged my branch, but also reviewed all my work. I&#8217;m no big fan of pair programming with two keyboards and all (as I&#8217;ve seen in some &#8220;<em>Agile</em>&#8221; companies round here in Brazil). But this kind or pair programming is, IMO, one of the most powerful techniques for learning how to code.</p>\n\n<p>However, that would be very easy if one simply waited for someone to review his work, and then forget about everything once it&#8217;s merged into trunk. Now it&#8217;s hammer time!</p>\n\n<p>I&#8217;m reviewing Matt&#8217;s changes to my branch and, before I jump in and write some more code, I decided to write this post to keep everything that was changed. That&#8217;s because I learn better when I write things down.</p>\n\n<ul>\n<li><a href=\"http://svn.apache.org/viewvc?view=revision&revision=1439133\">r1439133</a> - use primitives where warranted; simplify some loops</li>\n<li><a href=\"http://svn.apache.org/viewvc?view=revision&revision=1439134\">r1439134</a> - file org/layout</li>\n<li><a href=\"http://svn.apache.org/viewvc?view=revision&revision=1439135\">r1439135</a> - tighten comparable</li>\n<li><a href=\"http://svn.apache.org/viewvc?view=revision&revision=1439140\">r1439140</a> - tighten comparable</li>\n<li><a href=\"http://svn.apache.org/viewvc?view=revision&revision=1439153\">r1439153</a> - start to merge commonalities among NumericRanges, including a few small bugfixes</li>\n<li><a href=\"http://svn.apache.org/viewvc?view=revision&revision=1439626\">r1439626</a> - per http://en.wikipedia.org/wiki/Interval_%28mathematics%29, &#8216;unbounded&#8217; is not synonymous with &#8216;open&#8217;; both &#8216;open&#8217; and &#8216;closed&#8217; are &#8216;bounded.&#8217;  If this can be proven incorrect I&#8217;m only too happy to retract this commit.</li>\n<li><a href=\"http://svn.apache.org/viewvc?view=revision&revision=1439633\">r1439633</a> - keywords</li>\n<li><a href=\"http://svn.apache.org/viewvc?view=revision&revision=1439637\">r1439637</a> - fix predicated generators&#8217; implementations/tests</li>\n</ul>\n\n<p>I learned that I have to pay more attention to generics, follow the principle of using primitives where warranted, and thoroughly analyse loops and ifs. Ah, and that I don&#8217;t know how to use <a href=\"http://svnbook.red-bean.com/en/1.4/svn.advanced.props.special.keywords.html\" title=\"SVN Keywords\">SVN keywords</a> :-)</p>"}, "pass_info": {"used_taxonomy_terms": [], "used_pagination": false, "pagination_has_more": false, "used_assets": true, "used_source_names": []}}