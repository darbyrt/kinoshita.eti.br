{"segments": {"content": "<p><a href=\"http://rosalind.info\">Rosalind</a> is a website with a curated set of exercices for bioinformatics, organized hierarchily. \nIn some of these examples you are required to replace characters (nucleotides) by other characters. It is a rather common \ntask for developers, like when you need to replace special characters in user&#8217;s names.</p>\n<p>There are different ways of describing it, such as translate, replace, or <strong><a href=\"http://en.wikipedia.org/wiki/Transliteration\">transliterate</a></strong>. The latter being my favorite definition. </p>\n<p>In Python I know that there are several different ways of transliterating strings \n[<a href=\"https://pypi.python.org/pypi/transliterate\">1</a>][<a href=\"http://blog.lebowtech.com/blog/programming/python/transliterate-with-python.html\">2</a>]. But in Java I always ended up using a Map or a Enum and writing my own method in some <em>Util</em> class for that.</p>\n<p>Turns out that <a href=\"http://commons.apache.org\">Apache Commons Lang</a>, which I use in most of my projects, \nprovided this feature. What means that I will be able to reduce the length of my code, what also means \nless code to be tested (and one less place to look for bugs).</p>\n<div class=\"highlight\"><pre><span class=\"n\">String</span> <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">StringUtils</span><span class=\"o\">.</span><span class=\"na\">replaceChars</span><span class=\"o\">(</span><span class=\"s\">&quot;ATGCATGC&quot;</span><span class=\"o\">,</span> <span class=\"s\">&quot;GTCA&quot;</span><span class=\"o\">,</span> <span class=\"s\">&quot;CAGT&quot;</span><span class=\"o\">);</span> <span class=\"c1\">// &quot;TACGTACG&quot;</span>\n<span class=\"n\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">);</span>\n</pre></div>\n\n<p>What the code above does, is replace G by C, T by A, C by G and A by T. This process is part of finding the \n<a href=\"http://www.bioinformatics.org/sms/rev_comp.html\">DNA reverse complement</a>. But you can also use this for replacing \nspecial characters, spaces by _, and so it goes.</p>\n<p>Happy hacking!</p>"}, "pass_info": {"used_taxonomy_terms": [], "used_pagination": false, "pagination_has_more": false, "used_assets": false, "used_source_names": []}}