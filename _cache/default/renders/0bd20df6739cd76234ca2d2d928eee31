{"segments": {"content.abstract": "<p>\n    I have been playing with <a href=\"http://www.testanything.org\">TAP</a> for some time and even implemented a <a\n        href=\"http://www.tap4j.org\">Java API</a> to let <a href=\"http://www.testng.org\">TestNG</a>, <a\n        href=\"http://www.junit.org\">JUnit</a> and other Test Frameworks to produce and consume TAP. TAP is a standard\n    format for test output that first appeared with Perl 1 in 1987. It is human and machine readable, easy to be\n    serialized, language independent and extensible<sup><a href=\"#1\">1</a></sup> through the use of <a\n        href=\"http://www.yaml.org\">YAML</a>.\n</p>\n\n<p>\n    Some days ago while I was designing a plug-in to show TAP test results in <a href=\"http://www.jenkins-ci.org\">Jenkins</a>\n    I stumbled across a message in <a href=\"http://jenkins.361315.n4.nabble.com/Jenkins-dev-f387835.html\">Jenkins\n        dev-list</a> where Max Magee and Nick Wiesmueller were discussing about a way of showing more details about the test\n    executions. I thought that the TAP Plug-in would fit perfectly, until one of the users, <a\n        href=\"https://launchpad.net/~lifeless\">Robert Collins</a>, mentioned <a href=\"https://launchpad.net/subunit\">SubUnit</a>.\n</p>\n\n<p>\n    Shame on me, but I hadn&#8217;t heard of SubUnit until that message. Max Magee and I exchanged some messages after that,\n    talking about a initial design and analysis for the TAP Plug-in<sup>\n\n<a href=\"#2\">2</a></sup>. Here is the initial\n    idea:\n<p>\n<ul>\n    <li>The plug-in will be able to parse one or more test formats (maybe SubUnit, TAP and the formats available in\n        xUnit?).</li>\n    <li>The test results will be displayed the same way JUnit tests are displayed in Jenkins (I think Jenkins\n        supports JUnit format by default, but you can use objects and create test results data, independently of the\n        test framework that you are using).</li>\n    <li>There will be a table containing the Test Name, Description and Status and an expandable section.</li>\n    <li>Inside this expandable section will be available all the details about the test.</li>\n    <li>In case there are images within the test details, they should be displayed as a lightbox gallery.<sup><a\n            href=\"#3\">3</a></sup></li>\n</ul>\n<p>\n    Although I have worked with TAP and spent some good time writing the tap4j port for Java, I am not convinced it is\n    the best solution for this issue yet. Hence I am posting this initial comparison between TAP and SubUnit hoping that\n    more people will contribute with the design of this solution. My goal is not only having a super cool plug-in for\n    Jenkins, but ease integration of test results in different tools and collaborate with both TAP and SubUnit. Another\n    objective that I have in mind is improving the way that test results are displayed in Jenkins and enabling it to be\n    an alternative for tools like <a href=\"http://sourceforge.net/projects/smolder/\">Smolder</a>, <a\n        href=\"https://launchpad.net/testrepository\">TestRepository</a> or <a href=\"https://launchpad.net/tribunal\">Tribunal</a>.\n    Because I believe the tasks done by these tools could be all done in my favorite CI Server, and it would increase\n    the productivity of Build &amp; Release professionals :-))\n</p>\n\n", "content": "<p>\n    I have been playing with <a href=\"http://www.testanything.org\">TAP</a> for some time and even implemented a <a\n        href=\"http://www.tap4j.org\">Java API</a> to let <a href=\"http://www.testng.org\">TestNG</a>, <a\n        href=\"http://www.junit.org\">JUnit</a> and other Test Frameworks to produce and consume TAP. TAP is a standard\n    format for test output that first appeared with Perl 1 in 1987. It is human and machine readable, easy to be\n    serialized, language independent and extensible<sup><a href=\"#1\">1</a></sup> through the use of <a\n        href=\"http://www.yaml.org\">YAML</a>.\n</p>\n\n<p>\n    Some days ago while I was designing a plug-in to show TAP test results in <a href=\"http://www.jenkins-ci.org\">Jenkins</a>\n    I stumbled across a message in <a href=\"http://jenkins.361315.n4.nabble.com/Jenkins-dev-f387835.html\">Jenkins\n        dev-list</a> where Max Magee and Nick Wiesmueller were discussing about a way of showing more details about the test\n    executions. I thought that the TAP Plug-in would fit perfectly, until one of the users, <a\n        href=\"https://launchpad.net/~lifeless\">Robert Collins</a>, mentioned <a href=\"https://launchpad.net/subunit\">SubUnit</a>.\n</p>\n\n<p>\n    Shame on me, but I hadn&#8217;t heard of SubUnit until that message. Max Magee and I exchanged some messages after that,\n    talking about a initial design and analysis for the TAP Plug-in<sup>\n\n<a href=\"#2\">2</a></sup>. Here is the initial\n    idea:\n<p>\n<ul>\n    <li>The plug-in will be able to parse one or more test formats (maybe SubUnit, TAP and the formats available in\n        xUnit?).</li>\n    <li>The test results will be displayed the same way JUnit tests are displayed in Jenkins (I think Jenkins\n        supports JUnit format by default, but you can use objects and create test results data, independently of the\n        test framework that you are using).</li>\n    <li>There will be a table containing the Test Name, Description and Status and an expandable section.</li>\n    <li>Inside this expandable section will be available all the details about the test.</li>\n    <li>In case there are images within the test details, they should be displayed as a lightbox gallery.<sup><a\n            href=\"#3\">3</a></sup></li>\n</ul>\n<p>\n    Although I have worked with TAP and spent some good time writing the tap4j port for Java, I am not convinced it is\n    the best solution for this issue yet. Hence I am posting this initial comparison between TAP and SubUnit hoping that\n    more people will contribute with the design of this solution. My goal is not only having a super cool plug-in for\n    Jenkins, but ease integration of test results in different tools and collaborate with both TAP and SubUnit. Another\n    objective that I have in mind is improving the way that test results are displayed in Jenkins and enabling it to be\n    an alternative for tools like <a href=\"http://sourceforge.net/projects/smolder/\">Smolder</a>, <a\n        href=\"https://launchpad.net/testrepository\">TestRepository</a> or <a href=\"https://launchpad.net/tribunal\">Tribunal</a>.\n    Because I believe the tasks done by these tools could be all done in my favorite CI Server, and it would increase\n    the productivity of Build &amp; Release professionals :-))\n</p>\n\n<!--more-->\n<h2>\n    Comparison table<sup><a href=\"#4\">4</a></sup>\n</h2>\n<p>I believe tables are a good way to compare different technologies. However if anybody has any recommendation on a\n    different way of doing it, I would be glad to give it a try. In case there are missing items or other suggestion,\n    please, do not hesitate in getting in touch.</p>\n<table class='table table-bordered table-hover table-striped'>\n    <tbody>\n        <tr>\n            <th></th>\n            <th class=\"center\">TAP</th>\n            <th class=\"center\">SubUnit</th>\n        </tr>\n        <tr>\n            <th>Human and Machine readable format</th>\n            <td class=\"center\">Yes</td>\n            <td class=\"center\">Yes</td>\n        </tr>\n        <tr>\n            <th>Language independent</th>\n            <td class=\"center\">Yes</td>\n            <td class=\"center\">Yes</td>\n        </tr>\n        <tr>\n            <th>Programming languages supported<sup><a href=\"#5\">5</a></sup></th>\n            <td class=\"center\">Perl, Python, PHP, Java, C, C++, C#, Lua, Shell, Ruby, Javascript, Pascal,\n                PostgreSQL, Haskell, Lisp, Forth, Limbo</td>\n            <td class=\"center\">Python, C, C++ and Shell</td>\n        </tr>\n        <tr>\n            <th>Since</th>\n            <td class=\"center\">1987</td>\n            <td class=\"center\">2006</td>\n        </tr>\n        <tr>\n            <th>Grouping tests in some category/tag style</th>\n            <td class=\"center\">Proposal<sup><a href=\"#6\">6</a></sup><sup><a href=\"#7\">7</a></sup></td>\n            <td class=\"center\">Yes</td>\n        </tr>\n        <tr>\n            <th>Extensible</th>\n            <td class=\"center\">Yes, YAML</td>\n            <td class=\"center\">N/A?</td>\n        </tr>\n        <tr>\n            <th>Documentation</th>\n            <td class=\"center\">Good, but old.</td>\n            <td class=\"center\">Few examples, blogs or Wikis for beginners.</td>\n        </tr>\n        <tr>\n            <th>Used in real-world?</th>\n            <td class=\"center\">Yes, an enormous number of modules in <a href=\"http://www.cpan.org/\">CPAN</a> use it\n            </td>\n            <td class=\"center\">Yes (e.g.: <a href=\"http://www.samba.org/\">Samba</a>)\n            </td>\n        </tr>\n        <tr>\n            <th>Format specification</th>\n            <td class=\"center\">Draft at <a\n                href=\"http://testanything.org/wiki/index.php/TAP_at_IETF:_Draft_Standard\">IETF</a></td>\n            <td class=\"center\">Information on Python Package Index <sup><a href=\"#8\">8</a></sup></td>\n        </tr>\n        <tr>\n            <th>Show time of tests</th>\n            <td class=\"center\">Yes, with YAML</td>\n            <td class=\"center\">Yes, natively</td>\n        </tr>\n        <tr>\n            <th>Use custom test status</th>\n            <td class=\"center\">No</td>\n            <td class=\"center\">No</td>\n        </tr>\n        <tr>\n            <th>Attach files to test result</th>\n            <td class=\"center\">Yes, Base64 encoded in YAML</td>\n            <td class=\"center\">Yes, Base64 encoded in test output</td>\n        </tr>\n    </tbody>\n</table>\n\n<h2>Examples</h2>\n\nTAP: \n<div class=\"highlight\"><pre>1..1\nnot ok <span class=\"m\">1</span> Wrong length \n    ---\n    wanted: 5\n    found: 4\n    <span class=\"nb\">time</span>: 2011-02-01 00:09:01-07\n    extensions: \n        files: \n            1.txt:\n                name: 1.txt \n                file-type: text/plain \n                file-size: <span class=\"m\">43</span> \n                content: c2FtcGxl ...\n</pre></div>\n\n\nSubUnit (using Python + nose): \n<div class=\"highlight\"><pre><span class=\"nb\">time</span>: 2011-05-23 22:49:38.856075Z\n<span class=\"nb\">test</span>: my_test.SampleTestCase.runTest \nfailure: my_test.SampleTestCase.runTest \n<span class=\"o\">[</span> \n    Traceback <span class=\"o\">(</span>most recent call last<span class=\"o\">)</span>: File <span class=\"s2\">&quot;/media/windows/dev/java/qa_workspace/python_nose_tests/src/my_test.py&quot;</span>, line\n    11, in runTest self.assertEqual<span class=\"o\">(</span>len<span class=\"o\">(</span>s<span class=\"o\">)</span>, 4, <span class=\"s1\">&#39;Wrong length&#39;</span><span class=\"o\">)</span> AssertionError: Wrong length \n<span class=\"o\">]</span> \n<span class=\"nb\">time</span>: 2011-05-2322:49:38.858163Z\n</pre></div>\n\n\n<h2>Final considerations</h2>\n\n<p>Although I posted this comparison in my blog my intention is turning it to the community somehow, probably putting it in\nWikipedia. Perhaps my thoughts here were biased by my proximity with TAP, however I am open to suggestions, ideas or\ncritics (as a proof that I am open to SubUnit, I included it to the list of &#8216;Other test protocols&#8217; in TAP Wiki, as there\nwas only TST :-))</p>\n\n<p>Initially I wrote this post as a draft and sent it to Max, Nick, Cesar Fernandes and to Robert Collins for \nrevisions (hadn&#8217;t heard back from Robert, unfortunately). Later I plan sending it to the TAP\ndevelopment team and for the guys responsible for the Automake GSoC TAP/SubUnit project. Then decide which protocol\nstick with to develop the TAP Plug-in (or SubUnit :-)). When this analysis is finished I will write an alpha version of\nthis plug-in to send to the Jenkins dev-list, let me know if you would like to give it a try too. I believe that the\neasiest way to spread TAP or SubUnit as the de facto standard is using it, and asking for maintainers of test frameworks\nsuch as TestNG and JUnit to add support for these formats in theirs tools or make it the default output format.\n\n<hr/>\n\n<p><strong>Edit</strong></p>\n\n<p>As pointed by Renormalist, some tools that generate TAP also use another kind of diagnostics for extending the\n    test protocol. In this approach, in the next line after a test result the first character is a &#8216;#&#8217; followed by a\n    message. A test result may have several comment lines with diagnostic information. The comments in this case, belong\n    to the test result above it. Perl Test::More module produces diagnostics in this way by default. Below you find an\n    example of these diagnostics.</p>\n\n<div class=\"highlight\"><pre>1..1 \nnot ok <span class=\"m\">1</span> - There<span class=\"s1\">&#39;s a foo user </span>\n<span class=\"s1\"># Failed test &#39;</span>There<span class=\"s1\">&#39;s a foo user&#39;</span> \n<span class=\"c\"># at /home/kinow/perl/workspace/tests_with_testmore/main.pl line 2. </span>\n<span class=\"c\"># Since there&#39;s no foo, check that /etc/bar is set up right </span>\n<span class=\"c\"># Looks like you failed 1 test of 1.</span>\n</pre></div>\n\n\n<sup><a name=\"1\"></a>1</sup>\nAvailable in TAP version 13, http://testanything.org/wiki/index.php/YAMLish.\n\n<sup><a name=\"2\"></a>2</sup>\nDuring this article I use TAP Plug-in to refer to the plug-in to display detailed test result, though after talking with\nMax we agreed that perhaps it would be a good idea implement it in some generic manner, not specific to TAP. We also\nagreed it would be good check other plug-ins like\n<a href=\"https://wiki.jenkins-ci.org/display/JENKINS/xUnit+Plugin\">xUnit</a>\nto see if we can extend it or use some code as basis.\n\n<sup><a name=\"3\"></a>3</sup>\nStill got think more about it. Probably the images will be enclosed in the TAP Stream (or another format) Base64\nencoded. Perhaps we would have to decode each attachment in the test result and display it according to its mimetype\n(zips, pdf, etc). But a lightbox gallery for attachments would be awesome!\n\n<sup><a name=\"4\"></a>4</sup>\nFor the first version of this comparison table I added the items that I could think of, and other items retrieved from\nthe comparison done in Automake GSoC discussion list about the choice between TAP and SubUnit.\n\n<sup><a name=\"5\"></a>5</sup>\nHere we considered languages that have at least one producer for the the protocol.\n\n<sup><a name=\"6\"></a>6</sup>\nTest Blocks proposal,\n<a href=\"http://testanything.org/wiki/index.php/Test_Blocks\">http://testanything.org/wiki/index.php/Test_Blocks</a>\n.\n\n<sup><a name=\"7\"></a>7</sup>\nTest Groups proposal,\n<a href=\"http://testanything.org/wiki/index.php/Test_Groups\">http://testanything.org/wiki/index.php/Test_Groups</a>\n.\n\n<sup><a name=\"8\"></a>8</sup>\nPython Package Index for python-subunit 0.0.6,\n<a href=\"http://pypi.python.org/pypi/python-subunit/0.0.6\">http://pypi.python.org/pypi/python-subunit/0.0.6. This\n    was the only one that I could find, but there may have another specification somewhere else.</a>\n\n<h2>Referecens</h2>\n\n* Jenkins dev-list discussion where the TAP Plug-in idea was sent to\n<a href=\"http://jenkins.361315.n4.nabble.com/Re-Additional-Test-Result-Display-Idea-tt3510669.html\">http://jenkins.361315.n4.nabble.com/Re-Additional-Test-Result-Display-Idea-tt3510669.html</a>\n* Another discussion in Jenkins dev-list about Test Result refactoring\n<a href=\"http://jenkins.361315.n4.nabble.com/Review-requested-Test-Result-Refactoring-tt978100.html\">http://jenkins.361315.n4.nabble.com/Review-requested-Test-Result-Refactoring-tt978100.html</a>\n* Test Anything Protocol Wiki -\n<a href=\"http://www.testanything.org\">http://www.testanything.org</a>\n* Perl Wikipedia Article, History section -\n<a href=\"http://en.wikipedia.org/wiki/Perl#History\">http://en.wikipedia.org/wiki/Perl#History</a>\n* automake - Interfacing with a test protocol like TAP or subunit (GSoC)\n<a href=\"http://www.google-melange.com/gsoc/proposal/review/google/gsoc2011/slattarini/1\">http://www.google-melange.com/gsoc/proposal/review/google/gsoc2011/slattarini/1</a>"}, "pass_info": {"used_taxonomy_terms": [], "used_pagination": false, "pagination_has_more": false, "used_assets": false, "used_source_names": []}}