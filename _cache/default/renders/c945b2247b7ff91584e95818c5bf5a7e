{"segments": {"content.abstract": "<p>Last night and this morning I spent some time working on running <a href=\"http://en.wikipedia.org/wiki/Behavior-driven_development\" title=\"BDD\">BDD</a> tests that were created in <a href=\"http://www.teamst.org\" title=\"TestLink\">TestLink</a> in <a href=\"http://jenkins-ci.org\" title=\"Jenkins CI\">Jenkins</a>, using <a href=\"https://wiki.jenkins-ci.org/display/JENKINS/TestLink+Plugin\" title=\"Jenkins TestLink Plugin\">testlink-plugin</a>.</p>\n\n<p>Similar integration has already been proposed in <a href=\"http://www.sqaopen.net/blog/en/?tag=jinfeng\" title=\"JinFeng - by Olivier Renault\">JinFeng</a>, by Olivier Renault. Basically, you write BDD stories in TestLink (a story goes into the Test Case summary), Jenkins retrieves these stories and executes them using a skeleton project.</p>\n\n<div class='row'>\n<div class=\"ui container\" style='text-align: center;'>\n<figure>\n<a href=\"/2012/11/07/running-bdd-tests-from-testlink-in-jenkins/tl_bdd.png\" rel=\"prettyPhoto\" class=\"thumbnail\" title=\"TestLink BDD\">\n<img class=\"ui fluid image\" src=\"/2012/11/07/running-bdd-tests-from-testlink-in-jenkins/tl_bdd.png\" alt=\"TestLink BDD\" />\n</a>\n<figcaption>TestLink BDD</figcaption>\n</figure>\n</div>\n</div>\n\n<p>There are many ways to use BDD. In some of them you write code like Java, Ruby or Perl, and in others you write a DSL. I started working with JBehave, but for this integration, I preferred to use a <a href=\"http://en.wikipedia.org/wiki/Domain-specific_language\" title=\"DSL\">DSL</a> - as TestLink doesn&#8217;t maintain source code, only test cases -, so I switched to <a href=\"http://www.easyb.org\" title=\"easyb\">easyb</a>.</p>\n\n", "content": "<p>Last night and this morning I spent some time working on running <a href=\"http://en.wikipedia.org/wiki/Behavior-driven_development\" title=\"BDD\">BDD</a> tests that were created in <a href=\"http://www.teamst.org\" title=\"TestLink\">TestLink</a> in <a href=\"http://jenkins-ci.org\" title=\"Jenkins CI\">Jenkins</a>, using <a href=\"https://wiki.jenkins-ci.org/display/JENKINS/TestLink+Plugin\" title=\"Jenkins TestLink Plugin\">testlink-plugin</a>.</p>\n\n<p>Similar integration has already been proposed in <a href=\"http://www.sqaopen.net/blog/en/?tag=jinfeng\" title=\"JinFeng - by Olivier Renault\">JinFeng</a>, by Olivier Renault. Basically, you write BDD stories in TestLink (a story goes into the Test Case summary), Jenkins retrieves these stories and executes them using a skeleton project.</p>\n\n<div class='row'>\n<div class=\"ui container\" style='text-align: center;'>\n<figure>\n<a href=\"/2012/11/07/running-bdd-tests-from-testlink-in-jenkins/tl_bdd.png\" rel=\"prettyPhoto\" class=\"thumbnail\" title=\"TestLink BDD\">\n<img class=\"ui fluid image\" src=\"/2012/11/07/running-bdd-tests-from-testlink-in-jenkins/tl_bdd.png\" alt=\"TestLink BDD\" />\n</a>\n<figcaption>TestLink BDD</figcaption>\n</figure>\n</div>\n</div>\n\n<p>There are many ways to use BDD. In some of them you write code like Java, Ruby or Perl, and in others you write a DSL. I started working with JBehave, but for this integration, I preferred to use a <a href=\"http://en.wikipedia.org/wiki/Domain-specific_language\" title=\"DSL\">DSL</a> - as TestLink doesn&#8217;t maintain source code, only test cases -, so I switched to <a href=\"http://www.easyb.org\" title=\"easyb\">easyb</a>.</p>\n\n<!--more-->\n\n<p>There are many pros and cons in this integration, and a lot of work to do in the existing BDD tools, in TestLink and in the testlink-plugin too. I will write more about it in details later, but here&#8217;s a short list of things I&#8217;ve noted to work on the integration:</p>\n\n<ul>\n    <li>easyb reports have to be converted to TestNG, TAP or JUnit formats, or a new results seeking strategy will have to created for testlink-plugin</li>\n    <li>TestLink doesn&#8217;t store the stories correctly. In my test job in Jenkins, I had to use some Perl one liners to strip HTML and sanitize the string (take a look below)</li>\n</ul>\n\n<div class=\"highlight\"><pre><span class=\"nb\">echo</span> <span class=\"nv\">$TESTLINK_TESTCASE_SUMMARY</span> <span class=\"p\">|</span> perl -pe <span class=\"s1\">&#39;s|\\&lt;br \\/\\&gt;|\\n|g&#39;</span> <span class=\"p\">|</span> perl -pe <span class=\"s1\">&#39;s|\\&lt;br\\/\\&gt;|\\n|g&#39;</span> <span class=\"p\">|</span> perl -pe <span class=\"s1\">&#39;s|\\&lt;\\/div\\&gt;|\\n|g&#39;</span> <span class=\"p\">|</span> sed -e <span class=\"s1\">&#39;s/&lt;[a-zA-Z\\/][^&gt;]*&gt;//g&#39;</span> <span class=\"p\">|</span> perl -MHTML::Entities -le <span class=\"s1\">&#39;while(&lt;&gt;) {print decode_entities($_);}&#39;</span> <span class=\"p\">|</span> perl -pe <span class=\"s1\">&#39;s|^\\s+||&#39;</span> <span class=\"p\">|</span> perl -pe <span class=\"s1\">&#39;s|\\xA0||g&#39;</span> &gt; <span class=\"s2\">&quot;</span><span class=\"nv\">$TESTLINK_TESTCASE_EASYB_FILENAME</span><span class=\"s2\">.story&quot;</span>\n</pre></div>\n\n<div class='row'>\n<div class=\"ui container\" style='text-align: center;'>\n<figure>\n<a href=\"/2012/11/07/running-bdd-tests-from-testlink-in-jenkins/jenkins_bdd.png\" rel=\"prettyPhoto\" class=\"thumbnail\" title=\"Jenkins BDD\">\n<img class=\"ui fluid image\" src=\"/2012/11/07/running-bdd-tests-from-testlink-in-jenkins/jenkins_bdd.png\" alt=\"Jenkins BDD\" />\n</a>\n<figcaption>Jenkins BDD</figcaption>\n</figure>\n</div>\n</div>\n\n<p>I&#8217;m working on a <a href=\"/2012/10/25/a-quick-view-on-wordpress-mantis-and-jenkins-plug-in-api\" title=\"A quick view on WordPress, Mantis and Jenkins plug-in API\">Plug-in API proposal</a> for TestLink, and I can already imagine a few places where we could use a plug-in and that would help in the BDD integration.</p>\n\n<p>A test case could use a plug-in to retrieve its content from a git repository, for instance. So the BDD could be stored/versioned in GitHub, and written in any language. And it would be displayed by the plug-in as if it was the Test Case summary in TestLink.</p>\n\n<p>You can get the idea of the integration from the screen shots in this post. The source code for the skeleton project is available in this repository - <a href=\"https://github.com/kinow/easyb-sandbox\" title=\"https://github.com/kinow/easyb-sandbox\">https://github.com/kinow/easyb-sandbox</a>. I used the examples from <a href=\"http://www.easyb.org/storyexmpls.html\" title=\"http://www.easyb.org/storyexmpls.html\">easyb website</a>.</p>"}, "pass_info": {"used_taxonomy_terms": [], "used_pagination": false, "pagination_has_more": false, "used_assets": true, "used_source_names": []}}